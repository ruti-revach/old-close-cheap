////------------------------------------------------------------------------------
//// <auto-generated>
////    This code was generated from a template.
////
////    Manual changes to this file may cause unexpected behavior in your application.
////    Manual changes to this file will be overwritten if the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------

//using System;
//using System.ComponentModel;
//using System.Data.EntityClient;
//using System.Data.Objects;
//using System.Data.Objects.DataClasses;
//using System.Linq;
//using System.Runtime.Serialization;
//using System.Xml.Serialization;

//[assembly: EdmSchemaAttribute()]
//#region EDM Relationship Metadata

//[assembly: EdmRelationshipAttribute("close_cheapModel", "FK_registered_stores_businessOwner", "businessOwner", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.businessOwner), "registered_stores", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(Models.registered_stores), true)]
//[assembly: EdmRelationshipAttribute("close_cheapModel", "FK_history_user", "user", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.user), "history", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.history), true)]
//[assembly: EdmRelationshipAttribute("close_cheapModel", "FK__kategory__regist__71D1E811", "registered_stores", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Models.registered_stores), "kategory", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Models.kategory), true)]

//#endregion

//namespace Models
//{
//    #region Contexts
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    public partial class close_cheapEntities2 : ObjectContext
//    {
//        #region Constructors
    
//        /// <summary>
//        /// Initializes a new close_cheapEntities2 object using the connection string found in the 'close_cheapEntities2' section of the application configuration file.
//        /// </summary>
//        public close_cheapEntities2() : base("name=close_cheapEntities2", "close_cheapEntities2")
//        {
//            this.ContextOptions.LazyLoadingEnabled = true;
//            OnContextCreated();
//        }
    
//        /// <summary>
//        /// Initialize a new close_cheapEntities2 object.
//        /// </summary>
//        public close_cheapEntities2(string connectionString) : base(connectionString, "close_cheapEntities2")
//        {
//            this.ContextOptions.LazyLoadingEnabled = true;
//            OnContextCreated();
//        }
    
//        /// <summary>
//        /// Initialize a new close_cheapEntities2 object.
//        /// </summary>
//        public close_cheapEntities2(EntityConnection connection) : base(connection, "close_cheapEntities2")
//        {
//            this.ContextOptions.LazyLoadingEnabled = true;
//            OnContextCreated();
//        }
    
//        #endregion
    
//        #region Partial Methods
    
//        partial void OnContextCreated();
    
//        #endregion
    
//        #region ObjectSet Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<businessOwner> businessOwner
//        {
//            get
//            {
//                if ((_businessOwner == null))
//                {
//                    _businessOwner = base.CreateObjectSet<businessOwner>("businessOwner");
//                }
//                return _businessOwner;
//            }
//        }
//        private ObjectSet<businessOwner> _businessOwner;
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<history> history
//        {
//            get
//            {
//                if ((_history == null))
//                {
//                    _history = base.CreateObjectSet<history>("history");
//                }
//                return _history;
//            }
//        }
//        private ObjectSet<history> _history;
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<kategory> kategory
//        {
//            get
//            {
//                if ((_kategory == null))
//                {
//                    _kategory = base.CreateObjectSet<kategory>("kategory");
//                }
//                return _kategory;
//            }
//        }
//        private ObjectSet<kategory> _kategory;
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<registered_stores> registered_stores
//        {
//            get
//            {
//                if ((_registered_stores == null))
//                {
//                    _registered_stores = base.CreateObjectSet<registered_stores>("registered_stores");
//                }
//                return _registered_stores;
//            }
//        }
//        private ObjectSet<registered_stores> _registered_stores;
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<user> user
//        {
//            get
//            {
//                if ((_user == null))
//                {
//                    _user = base.CreateObjectSet<user>("user");
//                }
//                return _user;
//            }
//        }
//        private ObjectSet<user> _user;

//        #endregion

//        #region AddTo Methods
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the businessOwner EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddTobusinessOwner(businessOwner businessOwner)
//        {
//            base.AddObject("businessOwner", businessOwner);
//        }
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the history EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddTohistory(history history)
//        {
//            base.AddObject("history", history);
//        }
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the kategory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddTokategory(kategory kategory)
//        {
//            base.AddObject("kategory", kategory);
//        }
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the registered_stores EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddToregistered_stores(registered_stores registered_stores)
//        {
//            base.AddObject("registered_stores", registered_stores);
//        }
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the user EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddTouser(user user)
//        {
//            base.AddObject("user", user);
//        }

//        #endregion

//    }

//    #endregion

//    #region Entities
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="close_cheapModel", Name="businessOwner")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class businessOwner : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new businessOwner object.
//        /// </summary>
//        /// <param name="shop_id">Initial value of the shop_id property.</param>
//        /// <param name="name">Initial value of the name property.</param>
//        /// <param name="adress">Initial value of the adress property.</param>
//        /// <param name="class_id">Initial value of the class_id property.</param>
//        public static businessOwner CreatebusinessOwner(global::System.Int32 shop_id, global::System.String name, global::System.String adress, global::System.Int32 class_id)
//        {
//            businessOwner businessOwner = new businessOwner();
//            businessOwner.shop_id = shop_id;
//            businessOwner.name = name;
//            businessOwner.adress = adress;
//            businessOwner.class_id = class_id;
//            return businessOwner;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 shop_id
//        {
//            get
//            {
//                return _shop_id;
//            }
//            set
//            {
//                if (_shop_id != value)
//                {
//                    Onshop_idChanging(value);
//                    ReportPropertyChanging("shop_id");
//                    _shop_id = StructuralObject.SetValidValue(value, "shop_id");
//                    ReportPropertyChanged("shop_id");
//                    Onshop_idChanged();
//                }
//            }
//        }
//        private global::System.Int32 _shop_id;
//        partial void Onshop_idChanging(global::System.Int32 value);
//        partial void Onshop_idChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String name
//        {
//            get
//            {
//                return _name;
//            }
//            set
//            {
//                OnnameChanging(value);
//                ReportPropertyChanging("name");
//                _name = StructuralObject.SetValidValue(value, false, "name");
//                ReportPropertyChanged("name");
//                OnnameChanged();
//            }
//        }
//        private global::System.String _name;
//        partial void OnnameChanging(global::System.String value);
//        partial void OnnameChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String adress
//        {
//            get
//            {
//                return _adress;
//            }
//            set
//            {
//                OnadressChanging(value);
//                ReportPropertyChanging("adress");
//                _adress = StructuralObject.SetValidValue(value, false, "adress");
//                ReportPropertyChanged("adress");
//                OnadressChanged();
//            }
//        }
//        private global::System.String _adress;
//        partial void OnadressChanging(global::System.String value);
//        partial void OnadressChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
//        [DataMemberAttribute()]
//        public global::System.String phone
//        {
//            get
//            {
//                return _phone;
//            }
//            set
//            {
//                OnphoneChanging(value);
//                ReportPropertyChanging("phone");
//                _phone = StructuralObject.SetValidValue(value, true, "phone");
//                ReportPropertyChanged("phone");
//                OnphoneChanged();
//            }
//        }
//        private global::System.String _phone;
//        partial void OnphoneChanging(global::System.String value);
//        partial void OnphoneChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 class_id
//        {
//            get
//            {
//                return _class_id;
//            }
//            set
//            {
//                Onclass_idChanging(value);
//                ReportPropertyChanging("class_id");
//                _class_id = StructuralObject.SetValidValue(value, "class_id");
//                ReportPropertyChanged("class_id");
//                Onclass_idChanged();
//            }
//        }
//        private global::System.Int32 _class_id;
//        partial void Onclass_idChanging(global::System.Int32 value);
//        partial void Onclass_idChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("close_cheapModel", "FK_registered_stores_businessOwner", "registered_stores")]
//        public registered_stores registered_stores
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registered_stores>("close_cheapModel.FK_registered_stores_businessOwner", "registered_stores").Value;
//            }
//            set
//            {
//                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registered_stores>("close_cheapModel.FK_registered_stores_businessOwner", "registered_stores").Value = value;
//            }
//        }
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [BrowsableAttribute(false)]
//        [DataMemberAttribute()]
//        public EntityReference<registered_stores> registered_storesReference
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registered_stores>("close_cheapModel.FK_registered_stores_businessOwner", "registered_stores");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registered_stores>("close_cheapModel.FK_registered_stores_businessOwner", "registered_stores", value);
//                }
//            }
//        }

//        #endregion

//    }
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="close_cheapModel", Name="history")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class history : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new history object.
//        /// </summary>
//        /// <param name="history_id">Initial value of the history_id property.</param>
//        /// <param name="user_id">Initial value of the user_id property.</param>
//        public static history Createhistory(global::System.String history_id, global::System.Int32 user_id)
//        {
//            history history = new history();
//            history.history_id = history_id;
//            history.user_id = user_id;
//            return history;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String history_id
//        {
//            get
//            {
//                return _history_id;
//            }
//            set
//            {
//                if (_history_id != value)
//                {
//                    Onhistory_idChanging(value);
//                    ReportPropertyChanging("history_id");
//                    _history_id = StructuralObject.SetValidValue(value, false, "history_id");
//                    ReportPropertyChanged("history_id");
//                    Onhistory_idChanged();
//                }
//            }
//        }
//        private global::System.String _history_id;
//        partial void Onhistory_idChanging(global::System.String value);
//        partial void Onhistory_idChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 user_id
//        {
//            get
//            {
//                return _user_id;
//            }
//            set
//            {
//                Onuser_idChanging(value);
//                ReportPropertyChanging("user_id");
//                _user_id = StructuralObject.SetValidValue(value, "user_id");
//                ReportPropertyChanged("user_id");
//                Onuser_idChanged();
//            }
//        }
//        private global::System.Int32 _user_id;
//        partial void Onuser_idChanging(global::System.Int32 value);
//        partial void Onuser_idChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("close_cheapModel", "FK_history_user", "user")]
//        public user user
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("close_cheapModel.FK_history_user", "user").Value;
//            }
//            set
//            {
//                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("close_cheapModel.FK_history_user", "user").Value = value;
//            }
//        }
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [BrowsableAttribute(false)]
//        [DataMemberAttribute()]
//        public EntityReference<user> userReference
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<user>("close_cheapModel.FK_history_user", "user");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<user>("close_cheapModel.FK_history_user", "user", value);
//                }
//            }
//        }

//        #endregion

//    }
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="close_cheapModel", Name="kategory")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class kategory : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new kategory object.
//        /// </summary>
//        /// <param name="kategory_Id">Initial value of the kategory_Id property.</param>
//        /// <param name="registered_stores_id">Initial value of the registered_stores_id property.</param>
//        /// <param name="class_id">Initial value of the class_id property.</param>
//        public static kategory Createkategory(global::System.String kategory_Id, global::System.Int32 registered_stores_id, global::System.Int32 class_id)
//        {
//            kategory kategory = new kategory();
//            kategory.kategory_Id = kategory_Id;
//            kategory.registered_stores_id = registered_stores_id;
//            kategory.class_id = class_id;
//            return kategory;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String kategory_Id
//        {
//            get
//            {
//                return _kategory_Id;
//            }
//            set
//            {
//                if (_kategory_Id != value)
//                {
//                    Onkategory_IdChanging(value);
//                    ReportPropertyChanging("kategory_Id");
//                    _kategory_Id = StructuralObject.SetValidValue(value, false, "kategory_Id");
//                    ReportPropertyChanged("kategory_Id");
//                    Onkategory_IdChanged();
//                }
//            }
//        }
//        private global::System.String _kategory_Id;
//        partial void Onkategory_IdChanging(global::System.String value);
//        partial void Onkategory_IdChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 registered_stores_id
//        {
//            get
//            {
//                return _registered_stores_id;
//            }
//            set
//            {
//                Onregistered_stores_idChanging(value);
//                ReportPropertyChanging("registered_stores_id");
//                _registered_stores_id = StructuralObject.SetValidValue(value, "registered_stores_id");
//                ReportPropertyChanged("registered_stores_id");
//                Onregistered_stores_idChanged();
//            }
//        }
//        private global::System.Int32 _registered_stores_id;
//        partial void Onregistered_stores_idChanging(global::System.Int32 value);
//        partial void Onregistered_stores_idChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 class_id
//        {
//            get
//            {
//                return _class_id;
//            }
//            set
//            {
//                Onclass_idChanging(value);
//                ReportPropertyChanging("class_id");
//                _class_id = StructuralObject.SetValidValue(value, "class_id");
//                ReportPropertyChanged("class_id");
//                Onclass_idChanged();
//            }
//        }
//        private global::System.Int32 _class_id;
//        partial void Onclass_idChanging(global::System.Int32 value);
//        partial void Onclass_idChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("close_cheapModel", "FK__kategory__regist__71D1E811", "registered_stores")]
//        public registered_stores registered_stores
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registered_stores>("close_cheapModel.FK__kategory__regist__71D1E811", "registered_stores").Value;
//            }
//            set
//            {
//                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registered_stores>("close_cheapModel.FK__kategory__regist__71D1E811", "registered_stores").Value = value;
//            }
//        }
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [BrowsableAttribute(false)]
//        [DataMemberAttribute()]
//        public EntityReference<registered_stores> registered_storesReference
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<registered_stores>("close_cheapModel.FK__kategory__regist__71D1E811", "registered_stores");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<registered_stores>("close_cheapModel.FK__kategory__regist__71D1E811", "registered_stores", value);
//                }
//            }
//        }

//        #endregion

//    }
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="close_cheapModel", Name="registered_stores")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class registered_stores : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new registered_stores object.
//        /// </summary>
//        /// <param name="registered_stores_id">Initial value of the registered_stores_id property.</param>
//        /// <param name="shop_id">Initial value of the shop_id property.</param>
//        public static registered_stores Createregistered_stores(global::System.Int32 registered_stores_id, global::System.Int32 shop_id)
//        {
//            registered_stores registered_stores = new registered_stores();
//            registered_stores.registered_stores_id = registered_stores_id;
//            registered_stores.shop_id = shop_id;
//            return registered_stores;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 registered_stores_id
//        {
//            get
//            {
//                return _registered_stores_id;
//            }
//            set
//            {
//                if (_registered_stores_id != value)
//                {
//                    Onregistered_stores_idChanging(value);
//                    ReportPropertyChanging("registered_stores_id");
//                    _registered_stores_id = StructuralObject.SetValidValue(value, "registered_stores_id");
//                    ReportPropertyChanged("registered_stores_id");
//                    Onregistered_stores_idChanged();
//                }
//            }
//        }
//        private global::System.Int32 _registered_stores_id;
//        partial void Onregistered_stores_idChanging(global::System.Int32 value);
//        partial void Onregistered_stores_idChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 shop_id
//        {
//            get
//            {
//                return _shop_id;
//            }
//            set
//            {
//                Onshop_idChanging(value);
//                ReportPropertyChanging("shop_id");
//                _shop_id = StructuralObject.SetValidValue(value, "shop_id");
//                ReportPropertyChanged("shop_id");
//                Onshop_idChanged();
//            }
//        }
//        private global::System.Int32 _shop_id;
//        partial void Onshop_idChanging(global::System.Int32 value);
//        partial void Onshop_idChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("close_cheapModel", "FK_registered_stores_businessOwner", "businessOwner")]
//        public businessOwner businessOwner
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<businessOwner>("close_cheapModel.FK_registered_stores_businessOwner", "businessOwner").Value;
//            }
//            set
//            {
//                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<businessOwner>("close_cheapModel.FK_registered_stores_businessOwner", "businessOwner").Value = value;
//            }
//        }
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [BrowsableAttribute(false)]
//        [DataMemberAttribute()]
//        public EntityReference<businessOwner> businessOwnerReference
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<businessOwner>("close_cheapModel.FK_registered_stores_businessOwner", "businessOwner");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<businessOwner>("close_cheapModel.FK_registered_stores_businessOwner", "businessOwner", value);
//                }
//            }
//        }
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("close_cheapModel", "FK__kategory__regist__71D1E811", "kategory")]
//        public EntityCollection<kategory> kategory
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<kategory>("close_cheapModel.FK__kategory__regist__71D1E811", "kategory");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<kategory>("close_cheapModel.FK__kategory__regist__71D1E811", "kategory", value);
//                }
//            }
//        }

//        #endregion

//    }
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="close_cheapModel", Name="user")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class user : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new user object.
//        /// </summary>
//        /// <param name="user_id">Initial value of the user_id property.</param>
//        /// <param name="userName">Initial value of the userName property.</param>
//        /// <param name="password">Initial value of the password property.</param>
//        /// <param name="adressUser">Initial value of the adressUser property.</param>
//        public static user Createuser(global::System.Int32 user_id, global::System.String userName, global::System.Int32 password, global::System.String adressUser)
//        {
//            user user = new user();
//            user.user_id = user_id;
//            user.userName = userName;
//            user.password = password;
//            user.adressUser = adressUser;
//            return user;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 user_id
//        {
//            get
//            {
//                return _user_id;
//            }
//            set
//            {
//                if (_user_id != value)
//                {
//                    Onuser_idChanging(value);
//                    ReportPropertyChanging("user_id");
//                    _user_id = StructuralObject.SetValidValue(value, "user_id");
//                    ReportPropertyChanged("user_id");
//                    Onuser_idChanged();
//                }
//            }
//        }
//        private global::System.Int32 _user_id;
//        partial void Onuser_idChanging(global::System.Int32 value);
//        partial void Onuser_idChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String userName
//        {
//            get
//            {
//                return _userName;
//            }
//            set
//            {
//                OnuserNameChanging(value);
//                ReportPropertyChanging("userName");
//                _userName = StructuralObject.SetValidValue(value, false, "userName");
//                ReportPropertyChanged("userName");
//                OnuserNameChanged();
//            }
//        }
//        private global::System.String _userName;
//        partial void OnuserNameChanging(global::System.String value);
//        partial void OnuserNameChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 password
//        {
//            get
//            {
//                return _password;
//            }
//            set
//            {
//                OnpasswordChanging(value);
//                ReportPropertyChanging("password");
//                _password = StructuralObject.SetValidValue(value, "password");
//                ReportPropertyChanged("password");
//                OnpasswordChanged();
//            }
//        }
//        private global::System.Int32 _password;
//        partial void OnpasswordChanging(global::System.Int32 value);
//        partial void OnpasswordChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String adressUser
//        {
//            get
//            {
//                return _adressUser;
//            }
//            set
//            {
//                OnadressUserChanging(value);
//                ReportPropertyChanging("adressUser");
//                _adressUser = StructuralObject.SetValidValue(value, false, "adressUser");
//                ReportPropertyChanged("adressUser");
//                OnadressUserChanged();
//            }
//        }
//        private global::System.String _adressUser;
//        partial void OnadressUserChanging(global::System.String value);
//        partial void OnadressUserChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("close_cheapModel", "FK_history_user", "history")]
//        public EntityCollection<history> history
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<history>("close_cheapModel.FK_history_user", "history");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<history>("close_cheapModel.FK_history_user", "history", value);
//                }
//            }
//        }

//        #endregion

//    }

//    #endregion

//}
